image: docker:stable

stages:
  - pre
  - compile
  - package
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  LICENSE_MANAGEMENT_SETUP_CMD: ''  # If needed, specify a command to setup your environment with a custom package manager.

services:
  - docker:dind

cache:
  paths:
    - .m2/repository/
    - ljprojectbuilder/target/
    - tomee/target/

license_management:
  stage: pre
  image:
    name: "registry.gitlab.com/gitlab-org/security-products/license-management:$CI_SERVER_VERSION_MAJOR-$CI_SERVER_VERSION_MINOR-stable"
    entrypoint: [""]
  variables:
    SETUP_CMD: $LICENSE_MANAGEMENT_SETUP_CMD
  allow_failure: true
  script:
    - /run.sh analyze .
  artifacts:
    reports:
      license_management: gl-license-management-report.json
  dependencies: []
  only:
    refs:
      - branches
    variables:
      - $GITLAB_FEATURES =~ /\blicense_management\b/
  except:
    variables:
      - $LICENSE_MANAGEMENT_DISABLED

export_drawio:
  stage: compile
  image: fjudith/draw.io:latest  
  script:
    - '/opt/draw.io/drawio -x -f png -o documentation/diagrams/lirejarpTemplate_G.png documentation/diagrams/lirejarpTemplate.drawio'
  only:
    - master

compile_java:
  stage: compile
  image: maven:3.3.9-jdk-8  
  script:
    - echo "building war"
    - 'cd ljprojectbuilder'
    - 'mvn clean package'
  only:
    - master
  artifacts:
    paths:
    - ljprojectbuilder/target/ljprojectbuilder.war

package_tomee:
  stage: compile
  image: maven:3.3.9-jdk-8
  script:
    - echo "building tomee"
    - 'cd tomee'
    - 'mvn tomee:build -Pmysql-kubernetes'
    - 'cd target'
    - 'chmod g+w apache-tomee'
    - 'cd apache-tomee'
    - 'chmod g+w logs/ temp/ webapps/ work/'
  only:
    - master
  artifacts:
    paths:
    - tomee/target/apache-tomee

package_docker:
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $REG_TOKEN registry.gitlab.com
#    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build -t ljprojectbuilder --tag $CONTAINER_IMAGE:$CI_COMMIT_SHA --tag $CONTAINER_IMAGE:latest .  
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest

#k8s-deploy:
#  image: google/cloud-sdk
#  stage: deploy
#  script:
#  - echo "$GOOGLE_KEY" > key.json
#  - gcloud auth activate-service-account --key-file key.json
#  - gcloud config set compute/zone europe-west1-b
#  - gcloud config set project ljprojectbuilder
#  - gcloud config set container/use_client_certificate True
#  - gcloud container clusters get-credentials dev-projectbuilder
 # - kubectl delete secret registry.gitlab.com
 # - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=ztarbug --docker-password=$REGISTRY_PASSWD --docker-email=markus.zarbock@gmx.de
#  - kubectl apply -f deployment.yml

include:
  template: License-Management.gitlab-ci.yml


 