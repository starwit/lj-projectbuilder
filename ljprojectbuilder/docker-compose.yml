version: "3.9"
services:
services:
  db:
    image: mysql:5.7
    restart: on-failure
    environment:
      MYSQL_DATABASE: 'ljprojectbuilder'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'ljprojectbuilder'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'ljprojectbuilder'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - db-data:/var/lib/mysql
#    networks: # Networks to join (Services on the same network can communicate with each other using their name)
#      - backend

  start_dependencies:
    image: alpine:latest
    depends_on:
      - db
    command: >
      /bin/bash -c "
        while ! nc -z db 3306;
        do
          echo sleeping;
          sleep 1;
        done;
        echo Connected!;
      "

  myapp-main:
    image: docker.pkg.github.com/starwit/lj-projectbuilder/ljprojectbuilder:latest
    depends_on:
      - start_dependencies
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ljprojectbuilder?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: ljprojectbuilder
      SPRING_DATASOURCE_PASSWORD: ljprojectbuilder
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTID: 7ab2e400265859cff984
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENTSECRET: c74cd92c08ebab7d9682b1f9abb6dcaf6879b972
#    networks: # Networks to join (Services on the same network can communicate with each other using their name)
#      - backend

# Names our volume
volumes:
  db-data:

 # Networks to be created to facilitate communication between containers
#networks:
#  backend:
